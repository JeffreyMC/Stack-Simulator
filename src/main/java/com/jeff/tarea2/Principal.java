/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.jeff.tarea2;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author jeff
 */
public class Principal extends javax.swing.JFrame {

    Operaciones op = new Operaciones();
    Persona [] p;
    
    public Principal() {
        initComponents();
        setLocationRelativeTo(null);
        
        btnReiniciar.setEnabled(false);
        btnCant1.setEnabled(false);
        btnCant2.setEnabled(false);
        btnCant3.setEnabled(false);
        btnPop1.setEnabled(false);
        btnPop2.setEnabled(false);
        btnPop3.setEnabled(false);
        btnVaciar1.setEnabled(false);
        btnVaciar2.setEnabled(false);
        btnVaciar3.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        btnGeneraDatos = new javax.swing.JButton();
        btnReiniciar = new javax.swing.JButton();
        btnPop1 = new javax.swing.JButton();
        btnPop2 = new javax.swing.JButton();
        btnPop3 = new javax.swing.JButton();
        btnVaciar1 = new javax.swing.JButton();
        btnVaciar2 = new javax.swing.JButton();
        btnVaciar3 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        btnCant1 = new javax.swing.JButton();
        btnCant2 = new javax.swing.JButton();
        btnCant3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Simulador Pila EstÃ¡tica");

        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "TODOS", "Menores", "Adultos", "Adultos Mayores"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabla.setShowGrid(true);
        tabla.setShowHorizontalLines(false);
        tabla.getTableHeader().setResizingAllowed(false);
        tabla.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tabla);
        if (tabla.getColumnModel().getColumnCount() > 0) {
            tabla.getColumnModel().getColumn(0).setResizable(false);
            tabla.getColumnModel().getColumn(1).setResizable(false);
            tabla.getColumnModel().getColumn(2).setResizable(false);
            tabla.getColumnModel().getColumn(3).setResizable(false);
        }

        btnGeneraDatos.setText("Generar datos");
        btnGeneraDatos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGeneraDatosActionPerformed(evt);
            }
        });

        btnReiniciar.setText("Reiniciar");
        btnReiniciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReiniciarActionPerformed(evt);
            }
        });

        btnPop1.setText("Extraer elemento");
        btnPop1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPop1ActionPerformed(evt);
            }
        });

        btnPop2.setText("Extraer elemento");
        btnPop2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPop2ActionPerformed(evt);
            }
        });

        btnPop3.setText("Extraer elemento");
        btnPop3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPop3ActionPerformed(evt);
            }
        });

        btnVaciar1.setText("Vaciar pila");
        btnVaciar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVaciar1ActionPerformed(evt);
            }
        });

        btnVaciar2.setText("Vaciar pila");
        btnVaciar2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVaciar2ActionPerformed(evt);
            }
        });

        btnVaciar3.setText("Vaciar pila");
        btnVaciar3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVaciar3ActionPerformed(evt);
            }
        });

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);

        btnCant1.setText("No. elementos");
        btnCant1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCant1ActionPerformed(evt);
            }
        });

        btnCant2.setText("No. elementos");
        btnCant2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCant2ActionPerformed(evt);
            }
        });

        btnCant3.setText("No. elementos");
        btnCant3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCant3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(btnGeneraDatos)
                    .addComponent(btnReiniciar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(btnCant1)
                    .addComponent(btnPop1)
                    .addComponent(btnVaciar1))
                .addGap(18, 18, 18)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(btnVaciar2)
                    .addComponent(btnCant2)
                    .addComponent(btnPop2))
                .addGap(24, 24, 24)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(btnVaciar3)
                    .addComponent(btnCant3)
                    .addComponent(btnPop3))
                .addGap(57, 57, 57))
            .addGroup(layout.createSequentialGroup()
                .addGap(265, 265, 265)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 597, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 102, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnGeneraDatos)
                                .addGap(12, 12, 12)
                                .addComponent(btnReiniciar))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnPop2)
                                .addGap(12, 12, 12)
                                .addComponent(btnCant2)
                                .addGap(12, 12, 12)
                                .addComponent(btnVaciar2))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(btnPop3)
                                .addGap(12, 12, 12)
                                .addComponent(btnCant3)
                                .addGap(12, 12, 12)
                                .addComponent(btnVaciar3)))
                        .addContainerGap(38, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnPop1)
                        .addGap(12, 12, 12)
                        .addComponent(btnCant1)
                        .addGap(14, 14, 14)
                        .addComponent(btnVaciar1)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jSeparator2)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jSeparator3)
                        .addContainerGap())))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    private void btnGeneraDatosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGeneraDatosActionPerformed
        
        
        btnGeneraDatos.setEnabled(false);
        btnReiniciar.setEnabled(true);
        btnCant1.setEnabled(true);
        btnCant2.setEnabled(true);
        btnCant3.setEnabled(true);
        btnPop1.setEnabled(true);
        btnPop2.setEnabled(true);
        btnPop3.setEnabled(true);
        btnVaciar1.setEnabled(true);
        btnVaciar2.setEnabled(true);
        btnVaciar3.setEnabled(true);
        
        p = op.generar();
        
        
        DefaultTableModel dtm = (DefaultTableModel) tabla.getModel();
        //dtm.setColumnCount(0);
        
        String[] row = new String[p.length];
        
        for(int i=0; i< p.length; i++){
            row[i] = "ID: " + p[i].getId() + " | Edad: " + p[i].getEdad();
            
            dtm.addRow(new String[]{row[i]});
            
        }

        
       //menores
        Persona[] menores = op.menores();
        
        int cont = menores.length-1;
        for(int i = p.length-1; i > ((p.length-1)-(menores.length)); i--){
            dtm.setValueAt("ID: " + menores[cont].getId() + " | Edad: " + menores[cont].getEdad(), i, 1);
            cont--;
        }
        
         //mayores
        Persona[] mayores = op.mayores();
        int cont2 = mayores.length-1;
        for(int i = p.length-1; i > ((p.length-1)-(mayores.length)); i--){
            dtm.setValueAt("ID: " + mayores[cont2].getId() + " | Edad: " + mayores[cont2].getEdad(), i, 2);
            cont2--;
        }
        
         //mayores
        Persona[] ancianos = op.ancianos();
        int cont3 = ancianos.length-1;
        for(int i = p.length-1; i > ((p.length-1)-(ancianos.length)); i--){
            dtm.setValueAt("ID: "+ ancianos[cont3].getId() + " | Edad: " + ancianos[cont3].getEdad(), i, 3);
            cont3--;
        }
        
        
        
    }//GEN-LAST:event_btnGeneraDatosActionPerformed

    private void btnReiniciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReiniciarActionPerformed
        btnReiniciar.setEnabled(false);
        btnGeneraDatos.setEnabled(true);
        btnCant1.setEnabled(false);
        btnCant2.setEnabled(false);
        btnCant3.setEnabled(false);
        btnPop1.setEnabled(false);
        btnPop2.setEnabled(false);
        btnPop3.setEnabled(false);
        btnVaciar1.setEnabled(false);
        btnVaciar2.setEnabled(false);
        btnVaciar3.setEnabled(false);
        
        DefaultTableModel dtm = (DefaultTableModel) tabla.getModel();
        int rowCount = dtm.getRowCount();

        for (int i = rowCount - 1; i >= 0; i--) {
        dtm.removeRow(i);
    }
        
    }//GEN-LAST:event_btnReiniciarActionPerformed

    private void btnCant1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCant1ActionPerformed
        int cant = op.cuentaMenores();
        JOptionPane.showMessageDialog(null, String.format("La cantidad de menores es: %d",
                    cant),"Cantidad de personas menores", JOptionPane.INFORMATION_MESSAGE);
        
    }//GEN-LAST:event_btnCant1ActionPerformed

    private void btnCant2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCant2ActionPerformed
        
        int cant = op.cuentaMayores();
        JOptionPane.showMessageDialog(null, String.format("La cantidad de personas mayores es: %d",
                    cant),"Cantidad de personas mayores", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_btnCant2ActionPerformed

    private void btnCant3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCant3ActionPerformed
        int cant = op.cuentaAncianos();
        JOptionPane.showMessageDialog(null, String.format("La cantidad de adultos mayores es: %d",
                    cant),"Cantidad de adultos mayores", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_btnCant3ActionPerformed
    
    //extraer personas menores 
    private void btnPop1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPop1ActionPerformed
        Persona [] menores = op.popMenores();
        
        DefaultTableModel dtm = (DefaultTableModel) tabla.getModel();
        dtm.setRowCount(0);
        
        String[] row = new String[p.length];
        
        for(int i=0; i< p.length; i++){
            row[i] = "ID: " + p[i].getId() + " | Edad: " + p[i].getEdad();
            
            dtm.addRow(new String[]{row[i]});
            
        }
        //vuelve a mostrar la lista de menores actualizada
        if (menores != null) {
            int cont = menores.length - 1;
            for (int i = p.length - 1; i > ((p.length - 1) - (menores.length)); i--) {
                dtm.setValueAt("ID: " + menores[cont].getId() + " | Edad: " + menores[cont].getEdad(), i, 1);
                cont--;
            }
        }

        
         //vuelve a actualizar la lista de mayores
        Persona[] mayores = op.getMayor();
        int cont2 = mayores.length-1;
        for(int i = p.length-1; i > ((p.length-1)-(mayores.length)); i--){
            dtm.setValueAt("ID: " + mayores[cont2].getId() + " | Edad: " + mayores[cont2].getEdad(), i, 2);
            cont2--;
        }
        
         //actualiza la lista de adultos mayores
        Persona[] ancianos = op.getAnciano();
        int cont3 = ancianos.length-1;
        for(int i = p.length-1; i > ((p.length-1)-(ancianos.length)); i--){
            dtm.setValueAt("ID: " + ancianos[cont3].getId() + " | Edad: " + ancianos[cont3].getEdad(), i, 3);
            cont3--;
        }
        
    }//GEN-LAST:event_btnPop1ActionPerformed
    
    //extrae las personas mayores
    private void btnPop2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPop2ActionPerformed
        
        Persona [] mayores = op.popMayores();
        
        DefaultTableModel dtm = (DefaultTableModel) tabla.getModel();
        dtm.setRowCount(0);
        
        String[] row = new String[p.length];
        
        for(int i=0; i< p.length; i++){
            row[i] = "ID: " + p[i].getId() + " | Edad: " + p[i].getEdad();
            
            dtm.addRow(new String[]{row[i]});
            
        }
        
        
        //actualiza la lista de mayores
        if (mayores != null) {
            int cont2 = mayores.length - 1;
            for (int i = p.length - 1; i > ((p.length - 1) - (mayores.length)); i--) {
                dtm.setValueAt("ID: " + mayores[cont2].getId() + " | Edad: " + mayores[cont2].getEdad(), i, 2);
                cont2--;
            }
        }
  
        //actualiza la lista de menores
        Persona [] menores = op.getMenor();
        int cont = menores.length-1;
        for(int i = p.length-1; i > ((p.length-1)-(menores.length)); i--){
            dtm.setValueAt("ID: " + menores[cont].getId() + " | Edad: " + menores[cont].getEdad(), i, 1);
            cont--;
        }
        
         //Actualiza la lista de adultos mayores
        Persona[] ancianos = op.getAnciano();
        int cont3 = ancianos.length-1;
        for(int i = p.length-1; i > ((p.length-1)-(ancianos.length)); i--){
            dtm.setValueAt("ID: " + ancianos[cont3].getId() + " | Edad: " + ancianos[cont3].getEdad(), i, 3);
            cont3--;
        }
    }//GEN-LAST:event_btnPop2ActionPerformed
    
    //extrae un elemento en adultos mayores
    private void btnPop3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPop3ActionPerformed
        
        Persona [] ancianos = op.popAncianos();
        
        DefaultTableModel dtm = (DefaultTableModel) tabla.getModel();
        dtm.setRowCount(0);
        
        String[] row = new String[p.length];
        
        for(int i=0; i< p.length; i++){
            row[i] = "ID: " + p[i].getId() + " | Edad: " + p[i].getEdad();
            
            dtm.addRow(new String[]{row[i]});
            
        }
        
        if (ancianos != null) {
            //Actualiza la lista de ancianos
            int cont3 = ancianos.length - 1;
            for (int i = p.length - 1; i > ((p.length - 1) - (ancianos.length)); i--) {
                dtm.setValueAt("ID: " + ancianos[cont3].getId() + " | Edad: " + ancianos[cont3].getId(), i, 3);
                cont3--;
            }
        }
        
        
        //actualiza la lista de menores
        Persona [] menores = op.getMenor();
        int cont = menores.length-1;
        for(int i = p.length-1; i > ((p.length-1)-(menores.length)); i--){
            dtm.setValueAt("ID: " + menores[cont].getId() + " | Edad: " + menores[cont].getEdad(), i, 1);
            cont--;
        }
        
         //actualiza la lista de mayores
        Persona[] mayores = op.getMayor();
        int cont2 = mayores.length-1;
        for(int i = p.length-1; i > ((p.length-1)-(mayores.length)); i--){
            dtm.setValueAt("ID: " + mayores[cont2].getId() + " | Edad: " + mayores[cont2].getEdad(), i, 2);
            cont2--;
        }
        

    }//GEN-LAST:event_btnPop3ActionPerformed
    
    //vacÃ­a la pila
    private void btnVaciar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVaciar1ActionPerformed
        op.vaciarMenores();
        
        DefaultTableModel dtm = (DefaultTableModel) tabla.getModel();
        dtm.setRowCount(0);
        
        String[] row = new String[p.length];
        
        for(int i=0; i< p.length; i++){
            row[i] = "ID: " + p[i].getId() + " | Edad: " + p[i].getEdad();
            
            dtm.addRow(new String[]{row[i]});
            
        }
        
        //se vacÃ­a la pila de menores
        for(int i = 0; i < p.length; i++){
            dtm.setValueAt("", i, 1);
        }
        
         //mayores
        Persona[] mayores = op.getMayor();
        int cont2 = mayores.length-1;
        for(int i = p.length-1; i > ((p.length-1)-(mayores.length)); i--){
            dtm.setValueAt("ID: " + mayores[cont2].getId() + " | Edad: " + mayores[cont2].getEdad(), i, 2);
            cont2--;
        }
        
         //ancianos
        Persona [] ancianos = op.getAnciano();
        int cont3 = ancianos.length-1;
        for(int i = p.length-1; i > ((p.length-1)-(ancianos.length)); i--){
            dtm.setValueAt("ID: " + ancianos[cont3].getId() + " | Edad: " + ancianos[cont3].getEdad(), i, 3);
            cont3--;
        }
    }//GEN-LAST:event_btnVaciar1ActionPerformed

    private void btnVaciar2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVaciar2ActionPerformed
        op.vaciarMayores();
        
        DefaultTableModel dtm = (DefaultTableModel) tabla.getModel();
        dtm.setRowCount(0);
        
        String[] row = new String[p.length];
        
        for(int i=0; i< p.length; i++){
            row[i] = "ID: " + p[i].getId() + " | Edad: " + p[i].getEdad();
            
            dtm.addRow(new String[]{row[i]});
            
        }
        
        //se vacÃ­a la pila de mayores
        for(int i = 0; i < p.length; i++){
            dtm.setValueAt("", i, 2);
        }
        
        Persona [] menores = op.getMenor();
        int cont = menores.length-1;
        for(int i = p.length-1; i > ((p.length-1)-(menores.length)); i--){
            dtm.setValueAt("ID: " + menores[cont].getId() + " | Edad: " + menores[cont].getEdad(), i, 1);
            cont--;
        }
        
         //ancianos
        Persona [] ancianos = op.getAnciano();
        int cont3 = ancianos.length-1;
        for(int i = p.length-1; i > ((p.length-1)-(ancianos.length)); i--){
            dtm.setValueAt("ID: " + ancianos[cont3].getId() + " | Edad: " + ancianos[cont3].getEdad(), i, 3);
            cont3--;
        }
    }//GEN-LAST:event_btnVaciar2ActionPerformed

    private void btnVaciar3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVaciar3ActionPerformed
        
        op.vaciarAncianos();
        
        DefaultTableModel dtm = (DefaultTableModel) tabla.getModel();
        dtm.setRowCount(0);
        
        String[] row = new String[p.length];
        
        for(int i=0; i< p.length; i++){
            row[i] = "ID: " + p[i].getId() + " | Edad: " + p[i].getEdad();
            
            dtm.addRow(new String[]{row[i]});
            
        }
        
        //se vacÃ­a la pila de ancianos
        for(int i = 0; i < p.length; i++){
            dtm.setValueAt("", i, 3);
        }
        
        Persona [] menores = op.getMenor();
        int cont = menores.length-1;
        for(int i = p.length-1; i > ((p.length-1)-(menores.length)); i--){
            dtm.setValueAt("ID: " + menores[cont].getId() + " | Edad: " + menores[cont].getEdad(), i, 1);
            cont--;
        }
        
         //ancianos
        Persona [] mayores = op.getMayor();
        int cont2 = mayores.length-1;
        for(int i = p.length-1; i > ((p.length-1)-(mayores.length)); i--){
            dtm.setValueAt("ID: " + mayores[cont2].getId() + " | Edad: " + mayores[cont2].getEdad(), i, 2);
            cont2--;
        }
    }//GEN-LAST:event_btnVaciar3ActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCant1;
    private javax.swing.JButton btnCant2;
    private javax.swing.JButton btnCant3;
    private javax.swing.JButton btnGeneraDatos;
    private javax.swing.JButton btnPop1;
    private javax.swing.JButton btnPop2;
    private javax.swing.JButton btnPop3;
    private javax.swing.JButton btnReiniciar;
    private javax.swing.JButton btnVaciar1;
    private javax.swing.JButton btnVaciar2;
    private javax.swing.JButton btnVaciar3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JTable tabla;
    // End of variables declaration//GEN-END:variables
}
